-Al executar aquest drivers tindrem per terminal:


Aquest es el driver de de Controlador de Domini, indica quina funcio vols provar

exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida


-Amb aquest Driver probarem totes les classes. No utilitzarem stubs ja que si ho fessim no estariem provant el nostre programa al 100%.


-------------------------------------Prova1.1------------------------------------------

Descripció: Aquesta funcionalitat serà la de jugar un hidato importat, per poder jugar necesitarem un hidato.

Objectius: provar que podem jugar correctament, interactuant per les diferents classes: partida, algoritmes, hidato.
			En aquesta prova li pasarem un hidato que no es pot resoldre.

Altres Elements integrats: Partida.class, Hidato.class, Algoritmes.class

Input:
1
1
Q,C,3,4
#,1,?,#
?,?,?,?
7,?,9,#

Output: 

Aquest es el driver de de Controlador de Domini, indica quina funcio vols provar

exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida
1
Has escollit provar el metode jugarHidatoImportat
Com vols importar la matriu?: [1 = copyPaste amb el format oficial; 2 = donant els numeros un a un]
1
Fes copi paste aqui:
Q,C,3,4
#,1,?,#
?,?,?,?
7,?,9,#
S'ha creat una nova partida amb el seguent hidato i s'ha comprovat que es pugui resoldre:

##   1  __  ##

__  __  __  __

 7  __   9  ##

Es pot resoldre?: false
Comprovem ara que tenim una partida creada...: false

exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida

Resultat: ok

-------------------------------------Prova1.2------------------------------------------

per simplificar pasarem hidatos creats per nosaltres i respectivament lo que ens retorna el drive [true o false] si es pot solucionar o no.
Tots aquest jocs de proves son per probar "jugarHidatoImportat > copyPaste amb el format oficial", es  a dir, després de posar 1 1 en el driver.

Hidatos.txt


-------------------------------------Prova1.3------------------------------------------

Descripció: jugar hidato importat donantli la matriu numero a numero

Objectius: poder facilitar a lusuari una altre importació d'hidato

Altres Elements integrats: Partida.class, Hidato.class, Algoritmes.class

Stubs contruïts i integrats:

Input:
1
2
1
1
2 2
1
1 1
0 0 1
1 0 2
0 1 3

Output: 

Aquest es el driver de de Controlador de Domini, indica quina funcio vols provar

exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida
1
Has escollit provar el metode jugarHidatoImportat
Com vols importar la matriu?: [1 = copyPaste amb el format oficial; 2 = donant els numeros un a un]
2
Digues el tipus de cella:
[1 = Quadrat; 2 = Triangle; 3 = Hexagon]
1
Digues el tipus d'adjacencia:
[1 = Costats; 2 = Costats i angles (nomes quadrat)]
1
De quina mida ho vols?
Escriu l'altura (i) i despres l'amplada (j), aixi: [5 7]
2 2
Hi ha forats?, posa el numero de forats, 0 si no n'hi ha
1
Donam la coordenada i,j del forat numero 1
Escriu la coordenada i, despres la coordenada j, aixi: [0 2]
1 1
La matriu queda aixi per ara:

__  __

__  **

Ara hauras d'entrar els numeros un a un
Donam la coordenada i,j de la seguent casella 1
Escriu la coordenada i, despres la coordenada j, i despres el valor aixi: [0 2 14]
0 0 1
Donam la coordenada i,j de la seguent casella 2
Escriu la coordenada i, despres la coordenada j, i despres el valor aixi: [0 2 14]
1 0 2
Donam la coordenada i,j de la seguent casella 3
Escriu la coordenada i, despres la coordenada j, i despres el valor aixi: [0 2 14]
0 1 3
S'ha creat una nova partida amb el seguent hidato i s'ha comprovat que es pugui resoldre:

 1   3

 2  **

Es pot resoldre?: false
Comprovem ara que tenim una partida creada...: false

exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida

Resultat: ok



-------------------------------------Prova2-----------------------------------------


Descripció: jugar hidato generat 

Objectius: poder jugar l'hidato

Altres Elements integrats: Partida.class, Hidato.class, Algoritmes.class

Stubs contruïts i integrats:

Input:
*sha fet previament prova 3
2
Output:

exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida
2
Has escollit provar el metode jugarHidatoGenerat
Passem a obtenir l'hidato previament generat
Aquest es l'hidato que havies generat:

 1   2   3   4   5

12  11  **  **   6

13  10   9   8   7

14  17  18  19  20

15  16  **  **  **


S'ha creat una partida amb l'hidato generat

Comprovarem mitjanÃ§ant el metode enPartida que tot hagi sortit be: true

exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida

Resultat: ok


-------------------------------------Prova3--------------------------------------

Descripció: autogenearar un hidato

Objectius: poder generar hidato per així comprovar el bon funcionament del algorisme

Altres Elements integrats: Partida.class, Hidato.class, Algoritmes.class

Stubs contruïts i integrats:

Input:
3
1
1
5 5 5

Output:
Aquest es el driver de de Controlador de Domini, indica quina funcio vols provar

exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida
3
Has escollit provar el metode autoGenerar
Si us plau, escull como vols generar un hidato, donant les seves caracteristiques o la seva dificultat

[1 = caracteristiques; 2 = dificultat]

1
A continuacio digues les caracteristiques de l'hidato

Digues el tipus de cella:
[1 = Quadrat; 2 = Triangle; 3 = Hexagon]
1

Digues el tipus d'adjacencia:
[1 = Costats; 2 = Costats i angles (nomes quadrat)]
1
Posa-ho de la seguent manera: [i j f] (i = altura (minim 2); j = amplada (minim 2), f = nombre de forats(no pot ser mes gran o igual que la meitat de caselles))

5 5 5
Molt be, aquest es l'hidato que s'ha generat

20  __  18  17  16

 9  __  11  __  __

 8  **  __  __  **

 7  __  __   2   1

 6  __  **  **  **


exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida

Resultat: ok


-------------------------------------Prova4--------------------------------------

Descripció: obtenir lhidato original, es a dir, el del principi

Objectius: poder fer reset dels moviment que s'hagin fet

Altres Elements integrats: Partida.class, Hidato.class, Algoritmes.class

Stubs contruïts i integrats:

Input:
*Just després d haver fet la prova 3*
4

Output:
exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida
4
Has escollit provar el metode getMatriuHidatoOriginalDePartida
Aquest es l'hidato original de la partida:

 1  __  __  __   5

12  __  **  **  __

__  __  __  __  __

__  __  __  __  20

__  16  **  **  **

Resultat: ok


-------------------------------------Prova5--------------------------------------

Descripció: obtenir lhidato de la partida

Objectius: poder demanar l'hidato si una altre classe el necesita

Altres Elements integrats: Partida.class, Hidato.class, Algoritmes.class

Stubs contruïts i integrats:

Input:
*Just després d haver fet la prova 3*
5

Output:

exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida
5
Has escollit provar el metode getMatriuHidatoDePartida
Aquest es l'hidato actual de la partida:

 1  __  __  __   5

12  __  **  **  __

__  __  __  __  __

__  __  __  __  20

__  16  **  **  **

Resultat: ok

-------------------------------------Prova6--------------------------------------

Descripció: poder solucionar l'hidato

Objectius: solucionar l'hidato si l'usuari ho demana

Altres Elements integrats: Partida.class, Hidato.class, Algoritmes.class

Stubs contruïts i integrats:

Input:
*Just després d haver fet la prova 3*
6

Output:

exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida
6
Has escollit provar el metode solucionarHidatoPartida
Aquesta es la solucio de l'hidato de la partida en curs

 1   2   3   4   5

12  11  **  **   6

13  10   9   8   7

14  17  18  19  20

15  16  **  **  **

Resultat: ok

-------------------------------------Prova7--------------------------------------

Descripció: poder solucionar l'hidato

Objectius: solucionar l'hidato si l'usuari ho demana

Altres Elements integrats: Partida.class, Hidato.class, Algoritmes.class

Stubs contruïts i integrats:

Input:
*Just després d haver fet la prova 3*
7

Output:
7
Has escollit provar el metode solucionarHidatoGenerat
Passem a obtenir l'hidato previament generat
Aquesta es la solucio de l'hidato que havies generat:

 1   2   3   4   5

12  11  **  **   6

13  10   9   8   7

14  17  18  19  20

15  16  **  **  **

Resultat: ok


-------------------------------------Prova8--------------------------------------

Descripció: poder obtenir lhidato generat

Objectius: obtenir lhidato generat

Altres Elements integrats: Partida.class, Hidato.class, Algoritmes.class

Stubs contruïts i integrats:

Input:
*Just després d haver fet la prova 3*
8

Output:
exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida
8
Has escollit provar el metode getMatriuHidatoGenerat
Passem a obtenir l'hidato previament generat
Aquest es l'hidato que havies generat:

 1  __  __  __   5

12  __  **  **  __

__  __  __  __  __

__  __  __  __  20

__  16  **  **  **

Resultat: ok


-------------------------------------Prova9--------------------------------------

Descripció: poder obtenir els nombres per defecte

Objectius: comprovar que obtenim els nombres per defecte correctament

Altres Elements integrats: Partida.class, Hidato.class, Algoritmes.class

Stubs contruïts i integrats:

Input:
*Just després d haver fet la prova 3*
9

Output:
exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida
9
Has escollit provar el metode getNombresPerDefecte
Recordem la matriu de l'hidato que has escollit:

 1  __  __  __   5

12  __  **  **  __

__  __  __  __  __

__  __  __  __  20

__  16  **  **  **

Els nombres que inicialment estaven presents eren:
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

Resultat: ok



-------------------------------------Prova10--------------------------------------

Descripció: poder obtenir els nombres per defecte

Objectius: comprovar que obtenim els nombres per defecte correctament

Altres Elements integrats: Partida.class, Hidato.class, Algoritmes.class

Stubs contruïts i integrats:

Input:
*Just després d haver fet la prova 3*
10
1 4 2

Output:

exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida
10
Has escollit provar el metode ferMoviment
Aquest es l'hidato actual de la partida:

**  22  21  **   1

__  __  20  **  __

__  __  __  __   3

16  11  12  __   4

15  __  __  __  __

Escriu la posicio on vols fer el moviment i el valor que vols ficar: [i j x]

1 4 2
hola
hola
[1, 3, 4, 11, 12, 15, 16, 20, 21, 22]
anterior: 1true posterior: 3true
hola
Moviment fet correctament, aixi queda la matriu:


**  22  21  **   1

__  __  20  **   2

__  __  __  __   3

16  11  12  __   4

15  __  __  __  __


 Vols ver un altre moviment? yes/no
no

Resultat: ok


-------------------------------------Prova11--------------------------------------

Descripció: veure enPartida per així iniciarla

Objectius: comprovar que enpartida funciona correctament

Altres Elements integrats: Partida.class, Hidato.class, Algoritmes.class

Stubs contruïts i integrats:

Input:
*Just després d haver fet la prova 3*
11

output:

exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida
11
Has escollit provar el metode enPartida
Comprovarem si estem en partida o no (encara que no estigui iniciada):true
Hi ha una partida creada

exit: Sortir del driver
1: jugarHidatoImportat
2: jugarHidatoGenerat
3: autoGenerar
4: getHidatoOriginalDePartida
5: getHidatoDePartida
6: solucionarHidatoPartida
7: solucionarHidatoGenerat
8: getMatriuHidatoGenerat
9: getNombresPerDefecte
10: ferMoviment
11: enPartida


Resultat: ok

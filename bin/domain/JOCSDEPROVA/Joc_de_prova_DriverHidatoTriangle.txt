Al executar el driverHidatoTriangle lo primer que esperem per terminal serà aixo:

Aquest es el driver de de HidatoTriangle, indica quina funcio vols provar

exit: Sortir del driver
1: getTipusCella
2: posicioValida

Un cop tenim això provarem les funcionalitats del driver.


------------------------------------------------------Prova1---------------------------------------------------------

Descripció: Provarem el métode getTipusCella de la classe HidatoTriangle (subclasse d' Hidato).

Objectius: Comprovar que el métode getTipusCella funciona correctament; retornant el TipusCella corresponent.

Altres Elements integrats: -.

Stubs contruïts i integrats: -.

Input: 1

Output: 

Has escollit provar el metode getTipusCella
S'ha creat un hidato quadrat amb tipus d'adjacencia per costats
Ara es cridara el mÃ¨tode getTipusCella, s'espera que es retorni el seguent tipus d'adjacencia: TRIANGLE
El tipus d'adjacencia retornat es: TRIANGLE
Comprovacio de correctesa: true

Driver getTipusCella executat correctament!

Resultat: ok



------------------------------------------------------Prova2---------------------------------------------------------


Descripció: Provarem el métode posicioValida de la classe HidadtoTriangle (subclasse d'Hidato).

Objectius: Comprovar que el métode posicioValida funciona correctament; retornarà un cop posada una posició si aquesta és adjacent a una segona posició, és a dir, vàlida.

Altres Elements integrats: -.

Stubs contruïts i integrats: -.

Input:
2
2 2
2 3
yes
3 4
3 3
yes
2 3
3 3
yes
2 5
2 3
2 3
no

Output:

2
Has escollit provar el metode posicioValida
S'ha creat un hidato quadrat amb tipus d'adjacencia per costats

Per provar el metode posicioValida, has d'escollir una posicio de la seguent matriu,
i despres una altra posicio, per comprovar si es pot accedir a la segona des de la primera.
Tingues en compte que han de ser diferents, ja que aquesta comprovacio es fa en una altra classe


 1   2   3   4   5

 6   7   8   9  10

11  12  13  14  15

16  17  18  19  20

21  22  23  24  25

Posa-ho de la seguent manera: [i j] (0..4)

2 2
Per a la posicio inicial, has escollit la coordenada: (2,2), que equival al valor: 13
Escriu les coordenades de la posicio que vols comprovar si es adjacent a la primera
Posa-ho de la seguent manera: [i j] (0..4)

2 3
Per a la segona posicio, has escollit la coordenada: (2,3), que equival al valor: 14

La posicio inicial es adjacent a la segona posicio?: true


Vols fer una altra comprobacio? yes/no
yes
Per provar el metode posicioValida, has d'escollir una posicio de la seguent matriu,
i despres una altra posicio, per comprovar si es pot accedir a la segona des de la primera.
Tingues en compte que han de ser diferents, ja que aquesta comprovacio es fa en una altra classe


 1   2   3   4   5

 6   7   8   9  10

11  12  13  14  15

16  17  18  19  20

21  22  23  24  25

Posa-ho de la seguent manera: [i j] (0..4)

3 4
Per a la posicio inicial, has escollit la coordenada: (3,4), que equival al valor: 20
Escriu les coordenades de la posicio que vols comprovar si es adjacent a la primera
Posa-ho de la seguent manera: [i j] (0..4)

3 3
Per a la segona posicio, has escollit la coordenada: (3,3), que equival al valor: 19

La posicio inicial es adjacent a la segona posicio?: true


Vols fer una altra comprobacio? yes/no
yes
Per provar el metode posicioValida, has d'escollir una posicio de la seguent matriu,
i despres una altra posicio, per comprovar si es pot accedir a la segona des de la primera.
Tingues en compte que han de ser diferents, ja que aquesta comprovacio es fa en una altra classe


 1   2   3   4   5

 6   7   8   9  10

11  12  13  14  15

16  17  18  19  20

21  22  23  24  25

Posa-ho de la seguent manera: [i j] (0..4)

2 3
Per a la posicio inicial, has escollit la coordenada: (2,3), que equival al valor: 14
Escriu les coordenades de la posicio que vols comprovar si es adjacent a la primera
Posa-ho de la seguent manera: [i j] (0..4)

3 3
Per a la segona posicio, has escollit la coordenada: (3,3), que equival al valor: 19

La posicio inicial es adjacent a la segona posicio?: false


Vols fer una altra comprobacio? yes/no
yes
Per provar el metode posicioValida, has d'escollir una posicio de la seguent matriu,
i despres una altra posicio, per comprovar si es pot accedir a la segona des de la primera.
Tingues en compte que han de ser diferents, ja que aquesta comprovacio es fa en una altra classe


 1   2   3   4   5

 6   7   8   9  10

11  12  13  14  15

16  17  18  19  20

21  22  23  24  25

Posa-ho de la seguent manera: [i j] (0..4)

2 5
Posa-ho de la seguent manera: [i j] (0..4)

2 3
Per a la posicio inicial, has escollit la coordenada: (2,3), que equival al valor: 14
Escriu les coordenades de la posicio que vols comprovar si es adjacent a la primera
Posa-ho de la seguent manera: [i j] (0..4)

2 3
Per a la segona posicio, has escollit la coordenada: (2,3), que equival al valor: 14

La posicio inicial es adjacent a la segona posicio?: false


Vols fer una altra comprobacio? yes/no
yes
Per provar el metode posicioValida, has d'escollir una posicio de la seguent matriu,
i despres una altra posicio, per comprovar si es pot accedir a la segona des de la primera.
Tingues en compte que han de ser diferents, ja que aquesta comprovacio es fa en una altra classe


 1   2   3   4   5

 6   7   8   9  10

11  12  13  14  15

16  17  18  19  20

21  22  23  24  25

Posa-ho de la seguent manera: [i j] (0..4)

1 1
Per a la posicio inicial, has escollit la coordenada: (1,1), que equival al valor: 7
Escriu les coordenades de la posicio que vols comprovar si es adjacent a la primera
Posa-ho de la seguent manera: [i j] (0..4)

2 2
Per a la segona posicio, has escollit la coordenada: (2,2), que equival al valor: 13

La posicio inicial es adjacent a la segona posicio?: false


Vols fer una altra comprobacio? yes/no
no

exit: Sortir del driver
1: getTipusCella
2: posicioValida

Resultat: ok


